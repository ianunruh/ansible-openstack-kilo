[DEFAULT]
bind_port = 8080

[pipeline:main]
{% if swift_ceilometer %}
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache container_sync bulk ratelimit tempurl authtoken keystoneauth container-quotas account-quotas slo dlo proxy-logging ceilometer proxy-server
{% else %}
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache container_sync bulk ratelimit tempurl authtoken keystoneauth container-quotas account-quotas slo dlo proxy-logging proxy-server
{% endif %}

[app:proxy-server]
use = egg:swift#proxy
account_autocreate = true

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
memcache_servers = {{ swift_memcache_servers|join(',') }}

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:domain_remap]
use = egg:swift#domain_remap

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:cname_lookup]
use = egg:swift#cname_lookup

[filter:staticweb]
use = egg:swift#staticweb

[filter:tempurl]
use = egg:swift#tempurl

[filter:formpost]
use = egg:swift#formpost

[filter:name_check]
use = egg:swift#name_check

[filter:list-endpoints]
use = egg:swift#list_endpoints

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:bulk]
use = egg:swift#bulk

[filter:slo]
use = egg:swift#slo

[filter:dlo]
use = egg:swift#dlo

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:gatekeeper]
use = egg:swift#gatekeeper

[filter:container_sync]
use = egg:swift#container_sync

[filter:xprofile]
use = egg:swift#xprofile

[filter:keystoneauth]
use = egg:swift#keystoneauth
operator_roles = admin,user
reseller_admin_role = reseller_admin

[filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory

auth_uri = {{ swift_keystone_auth_uri }}
auth_url = {{ swift_keystone_identity_uri }}
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = {{ swift_keystone_project }}
username = {{ swift_keystone_user }}
password = {{ swift_keystone_password }}
delay_auth_decision = true

{% if swift_ceilometer %}
[filter:ceilometer]
paste.filter_factory = ceilometermiddleware.swift:filter_factory
control_exchange = swift
url = rabbit://{{ swift_rabbitmq_user }}:{{ swift_rabbitmq_password }}@{{ swift_rabbitmq_hosts|join(',') }}/{{ swift_rabbitmq_vhost }}
driver = messagingv2
topic = notifications
log_level = WARN
{% endif %}
