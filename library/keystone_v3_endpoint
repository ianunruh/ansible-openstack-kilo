#!/usr/bin/env python
from keystoneclient.v3 import Client

def main():
    module = AnsibleModule(
        argument_spec=dict(
            service=dict(required=True),
            interface=dict(required=True),
            region=dict(default='RegionOne'),
            url=dict(),
            state=dict(choices=['present', 'absent'], default='present'),
            endpoint=dict(default='http://localhost:35357/v3'),
            token=dict(),
        ),
        supports_check_mode=True,
    )

    service_name = module.params['service']
    interface = module.params['interface']
    region_name = module.params['region']
    url = module.params['url']
    state = module.params['state']

    endpoint = module.params['endpoint']
    token = module.params['token']

    client = Client(endpoint=endpoint, token=token)

    service = client.services.find(name=service_name)
    region = client.regions.find(name=region_name)

    try:
        endpoint = client.endpoints.find(service=service, region=region, interface=interface)
    except:
        endpoint = None

    changed = False

    if state == 'present':
        if endpoint:
            if endpoint.url != url:
                if not module.check_mode:
                    endpoint = client.endpoints.update(endpoint, url=url)

                changed = True
        else:
            if not module.check_mode:
                endpoint = client.endpoints.create(service=service, region=region, interface=interface, url=url)

            changed = True
    elif endpoint:
        if not module.check_mode:
            endpoint.delete()

        changed = True

    module.exit_json(changed=changed)

from ansible.module_utils.basic import *
main()
